<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>Hello Maven World!</name>
    <groupId>nz.co.skytv</groupId>
    <artifactId>helloMaven</artifactId>
    <version>1.0.58-SNAPSHOT</version>
    <packaging>war</packaging>

    <description>
        Application used to test the release process.
    </description>

    <organization>
        <name>Sky Network Television Limited</name>
        <url>http://www.skytv.co.nz/</url>
    </organization>

    <scm>
        <connection>scm:git:ssh://git@10.61.0.24:7999/hel/hello.git</connection>
        <url>http://10.61.0.24/bitbucket/projects/HEL/repos/hello/browse</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <servlet.version>3.1.0</servlet.version>
        <springfox.version>2.3.0</springfox.version>
        <spring-boot.version>1.3.0.RELEASE</spring-boot.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring Boot Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Servlet Context -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${servlet.version}</version>
        </dependency>
        <!-- Swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${springfox.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml</groupId>
                    <artifactId>classmate</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${springfox.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml</groupId>
                    <artifactId>classmate</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <!-- Hardcodes the location of the resources folder so the variables available in the POM file are also available in all the files of the resources folder. -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <filters>
            <filter>src/main/resources/build.properties</filter>
        </filters>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>auto-clean</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <tagBase>scm:git:ssh://git@10.61.0.24:8444/hel/hello.git</tagBase>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <!--Deploys to your localhost tomcat. -->
            <!-- note: must define server and credentials settings.xml  -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <url>http://localhost:8080/manager/text</url>
                    <server>TomcatServer</server>
                    <path>/hello</path>
                </configuration>
            </plugin>
            <!-- Configures how the WAR file is built-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>
                        WEB-INF/lib/tomcat-*.jar,
                        WEB-INF/classes/hello.properties*
                    </packagingExcludes>
                </configuration>
            </plugin>
            <!-- This plugin allows the application to run as Spring boot -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>1.3.5.RELEASE</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!--Profile to build and release GIT master branch ad upload the WAR into Artifactory-->
        <profile>
            <id>profile-master</id>
            <activation>
                <property>
                    <name>bambooBranchName</name>
                    <value>master</value>
                </property>
            </activation>
            <distributionManagement>
                <repository>
                    <id>skydev03.skytv.co.nz</id>
                    <name>skydev03.skytv.co.nz-releases</name>
                    <url>http://10.61.0.20/artifactory/sky-releases</url>
                </repository>
            </distributionManagement>
        </profile>

        <!--Profile to build and release GIT CI branch ad upload the WAR into Artifactory-->
        <profile>
            <id>profile-ci</id>
            <activation>
                <property>
                    <name>bambooBranchName</name>
                    <value>ci</value>
                </property>
            </activation>
            <distributionManagement>
                <snapshotRepository>
                    <id>skydev03.skytv.co.nz</id>
                    <name>skydev03.skytv.co.nz-snapshots</name>
                    <url>http://10.61.0.20/artifactory/sky-snapshots</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
    </profiles>

    <!--specifies where (and how) this project will get to a remote repository when it is deployed-->
    <distributionManagement>
        <repository>
            <id>sky-releases</id>
            <name>SKY Release Repository</name>
            <url>http://10.61.0.20/artifactory/sky-releases</url>
        </repository>
        <snapshotRepository>
            <id>sky-snapshots</id>
            <name>SKY Snapshot Repository</name>
            <url>http://10.61.0.20/artifactory/sky-snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>
